{"ast":null,"code":"import _toConsumableArray from \"/Users/rose/Desktop/pollwatch/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/rose/Desktop/pollwatch/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/rose/Desktop/pollwatch/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rose/Desktop/pollwatch/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rose/Desktop/pollwatch/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rose/Desktop/pollwatch/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rose/Desktop/pollwatch/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rose/Desktop/pollwatch/src/components/Mulc.js\";\nimport React, { Component } from 'react';\nimport { Butt } from '../components/Butt';\nimport Titl_Crea from '../components/Titl_Crea';\n\nvar Mult =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Mult, _React$Component);\n\n  function Mult(props) {\n    var _this;\n\n    _classCallCheck(this, Mult);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mult).call(this, props));\n    _this.state = {\n      newItem: \"\",\n      list: []\n    };\n    return _this;\n  } //incorporating local storage \n\n\n  _createClass(Mult, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.hydrateStateWithLocalStorage(); // add event listener to save state to localStorage\n      // when user leaves/refreshes the page\n\n      window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); // saves if component has a chance to unmount\n\n      this.saveStateToLocalStorage();\n    }\n  }, {\n    key: \"hydrateStateWithLocalStorage\",\n    value: function hydrateStateWithLocalStorage() {\n      // for all items in state\n      for (var key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          var value = localStorage.getItem(key); // parse the localStorage string and setState\n\n          try {\n            value = JSON.parse(value);\n            this.setState(_defineProperty({}, key, value));\n          } catch (e) {\n            // handle empty string\n            this.setState(_defineProperty({}, key, value));\n          }\n        }\n      }\n    }\n  }, {\n    key: \"saveStateToLocalStorage\",\n    value: function saveStateToLocalStorage() {\n      // for every item in React state\n      for (var key in this.state) {\n        // save to localStorage\n        localStorage.setItem(key, JSON.stringify(this.state[key]));\n      }\n    }\n  }, {\n    key: \"updateInput\",\n    value: function updateInput(key, value) {\n      // update react state\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"addItem\",\n    value: function addItem() {\n      // create a new item with unique id\n      var newItem = {\n        id: 1 + Math.random(),\n        value: this.state.newItem.slice()\n      }; // copy current list of items\n\n      var list = _toConsumableArray(this.state.list); // add the new item to the list\n\n\n      list.push(newItem); // update state with new list, reset the new item input\n\n      this.setState({\n        list: list,\n        newItem: \"\"\n      });\n    }\n  }, {\n    key: \"deleteItem\",\n    value: function deleteItem(id) {\n      // copy current list of items\n      var list = _toConsumableArray(this.state.list); // filter out the item being deleted\n\n\n      var updatedList = list.filter(function (item) {\n        return item.id !== id;\n      });\n      this.setState({\n        list: updatedList\n      });\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(e) {\n      this.props.onClose && this.props.onClose(e);\n    } //render starts here\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.show) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"moda-back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"moda-fron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.props.children, React.createElement(Butt, {\n        onClick: function onClick(e) {\n          _this2.onClose(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Titl_Crea, {\n        titl: \"multiple choice\",\n        className: \"app-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"instuction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \" Ask a question and let participants choose from a list of answers.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"input-group mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        placeholder: \"Type list of Answers\",\n        value: this.state.newItem,\n        onChange: function onChange(e) {\n          return _this2.updateInput(\"newItem\", e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"input-group-append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"btn btn-outline-secondary\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.addItem();\n        },\n        disabled: !this.state.newItem.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \" + \"), \">Button\"))), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.state.list.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, item.value, React.createElement(\"button\", {\n          className: \"btn btn-floating\",\n          onClick: function onClick() {\n            return _this2.deleteItem(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          class: \"material-icons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"x\")));\n      })))));\n    }\n  }]);\n\n  return Mult;\n}(React.Component);\n\nexport { Mult as default };","map":{"version":3,"sources":["/Users/rose/Desktop/pollwatch/src/components/Mulc.js"],"names":["React","Component","Butt","Titl_Crea","Mult","props","state","newItem","list","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","setState","e","setItem","stringify","id","Math","random","slice","push","updatedList","filter","item","onClose","show","children","updateInput","target","addItem","length","map","deleteItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Butt } from '../components/Butt';\nimport Titl_Crea from '../components/Titl_Crea';\nexport default class Mult extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  //incorporating local storage \n  componentDidMount() {\n    this.hydrateStateWithLocalStorage();\n\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n\n    // saves if component has a chance to unmount\n    this.saveStateToLocalStorage();\n  }\n\n  hydrateStateWithLocalStorage() {\n    // for all items in state\n    for (let key in this.state) {\n      // if the key exists in localStorage\n      if (localStorage.hasOwnProperty(key)) {\n        // get the key's value from localStorage\n        let value = localStorage.getItem(key);\n\n        // parse the localStorage string and setState\n        try {\n          value = JSON.parse(value);\n          this.setState({ [key]: value });\n        } catch (e) {\n          // handle empty string\n          this.setState({ [key]: value });\n        }\n      }\n    }\n  }\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({ [key]: value });\n  }\n\n  addItem() {\n    // create a new item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n \n    };\n\n    // copy current list of items\n    const list = [...this.state.list];\n\n    // add the new item to the list\n    list.push(newItem);\n\n    // update state with new list, reset the new item input\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    // copy current list of items\n    const list = [...this.state.list];\n    // filter out the item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({ list: updatedList });\n  }\n\n  onClose(e) {\n    this.props.onClose && this.props.onClose(e);\n  }\n  \n\n//render starts here\n\n\n  render() {\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div className='moda-back'>\n        <div className='moda-fron'>\n          {this.props.children}\n\n\n          <Butt onClick={(e) => { this.onClose(e)}}>\n              Close\n            </Butt> \n\n          <Titl_Crea titl=\"multiple choice\" className=\"app-title\"></Titl_Crea>\n       \n            <div className=\"middle\">\n             \n              <div className=\"instuction\"> Ask a question and let participants \n                choose from a list of answers.\n              </div>\n              <br />\n              <div class=\"input-group mb-3\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Type list of Answers\"\n                  value={this.state.newItem}\n                  onChange={e => this.updateInput(\"newItem\", e.target.value)}\n                />\n                <div class=\"input-group-append\">\n                  <button class=\"btn btn-outline-secondary\" type=\"button\"\n                    onClick={() => this.addItem()}\n                    disabled={!this.state.newItem.length}\n                  >\n                  <i class=\"material-icons\"> + </i>>Button\n                  </button>\n                </div>\n              </div>\n\n              \n              <ul>\n                {this.state.list.map(item => {\n                  return (\n                    <li key={item.id}>\n                      {item.value}\n                      <button className=\"btn btn-floating\" onClick={() => this.deleteItem(item.id)}>\n                        <i class=\"material-icons\">x</i>\n                      </button>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          \n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}